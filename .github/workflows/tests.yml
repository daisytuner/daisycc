name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  schedule:
      - cron: "0 0 * * *"
  
jobs:

  scop2sdfg:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./scop2sdfg

    steps:
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
    - name: Install Package
      shell: bash -l {0}
      run: |      
        pip install git+https://github.com/spcl/dace.git@daisy
        pip install .[dev]
    - name: Lint with black
      shell: bash -l {0}
      run: |
        black --check --verbose scop2sdfg/
        black --check --verbose tests/
    - name: Unit tests with pytest
      shell: bash -l {0}
      run: |
        pytest --cov=scop2sdfg --cov-report=xml tests/unit

  plugin:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./plugin

    steps:
    - uses: actions/checkout@v3
    - name: Install LLVM
      shell: bash -l {0}
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main"
        sudo apt update
        sudo apt install libllvm16 llvm-16 llvm-16-dev llvm-16-runtime clang-16 libomp-16-dev libpolly-16-dev
    - name: Build and install
      shell: bash -l {0}
      run: |      
        mkdir -p build && cd build
        Polly_DIR=/usr/lib/llvm-16/lib/cmake/polly cmake -DCMAKE_INSTALL_PREFIX=/usr/local ..
        cmake --build .
        sudo cmake --install .
        cd ../
    - name: Test Plugin Load
      shell: bash -l {0}
      run: |      
        opt-16 --load-pass-plugin=build/lib/libDaisyLLVMPlugin.so --help | grep daisy

  driver:
    needs: [scop2sdfg, plugin]
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./driver

    steps:
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
    - name: Install
      shell: bash -l {0}
      run: |      
        pip install ../scop2sdfg/
        pip install .[dev]
    - name: Lint with black
      shell: bash -l {0}
      run: |
        black --check --verbose driver/

  integration-tests:
    needs: driver
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3
    - name: Install system packages
      shell: bash -l {0}
      run: |
        sudo apt install libopenblas-dev liblapack-dev libopenmpi-dev libpnetcdf-dev ncview
    - name: Install LLVM
      shell: bash -l {0}
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main"
        sudo apt update
        sudo apt install libllvm16 llvm-16 llvm-16-dev llvm-16-runtime clang-16 libomp-16-dev libpolly-16-dev
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
    - name: Install conda packages
      shell: bash -l {0}
      run: |
        conda install -c intel mkl-devel
    - name: Install scop2sdfg
      shell: bash -l {0}
      run: |      
        pip install git+https://github.com/spcl/dace.git@daisy
        pip install git+https://github.com/daisytuner/daisytuner.git

        cd scop2sdfg
        pip install .[dev]
        cd ..
    - name: Install DaisyLLVMPlugin
      shell: bash -l {0}
      run: |
        cd plugin/    
        mkdir -p build && cd build
        Polly_DIR=/usr/lib/llvm-16/lib/cmake/polly cmake -DCMAKE_INSTALL_PREFIX=/usr/local ..
        cmake --build .
        sudo cmake --install .
        cd ../../
        sudo ldconfig
    - name: Install driver
      shell: bash -l {0}
      run: |      
        cd driver/
        pip install .[dev]
        cd ..
    - name: Setup DaCe conf
      shell: bash -l {0}
      run: |
        cp .dace.conf.ci $HOME/.dace.conf
    - name: Run integration tests
      shell: bash -l {0}
      run: |
        pytest tests/
